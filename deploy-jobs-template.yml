parameters:
  - name: environment
    type: string
    default: Dev
  - name: location
    type: string
    default: 'uksouth'
  - name: azureSubscription
    type: string
    default: 'AppServicesDevOps-NonProd'
  - name: method
    type: string
    default: 'GET'
  - name: retries
    type: number
    default: 5
  - name: secondsDelay
    type: number
    default: 20
  - name: timeoutSec
    type: number
    default: 120
  - name: Searchindexer
    type: string
    default: 'INSS.EIIR.Functions.zip'
  - name: appZipFile
    type: string
    default: 'INSS.EIIR.WEB.zip'
  - name: deployWebapp
    type: string
  - name: deployfuncapp
    type: string

jobs:
  - deployment:
    displayName: Deploy Search Service function
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ if eq(parameters.deployfuncapp, true) }}:
              - task: AzureFunctionApp@1
                displayName: Azure Function App Deploy
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appType: 'functionApp'
                  appName: 'func-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-searchservice'
                  deployToSlotOrASE: true
                  resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'
                  slotName: 'staging'
                  package: '$(Pipeline.Workspace)/**/${{ parameters.Searchindexer }}'
                  appSettings: >
                    -EIIRIndexUrl "$(EIIRIndexUrl)"
                    -EIIRApiKey "$(EIIRApiKey)"
                    -blobconnectionstring "$(blobconnectionstring)"
                    -blobcontainername "$(blobcontainername)"
                    -extractjobserviceurl "$(extractjobserviceurl)"
                    -extractjobtimercron "$(extractjobtimercron)"
                    -notify__subscriberEmailTemplateId "$(notify__subscriberEmailTemplateId)"
                    -database__databuffersize "$(database__databuffersize)"
                    -database__updateextractavailableprocedure "$(database__updateextractavailableprocedure)"
                    -database__getextractavailableprocedure "$(database__getextractavailableprocedure)"
                    -database__getxmldataprocedure "$(database__getxmldataprocedure)"
                    -database__commandtimeout "$(database__commandtimeout)"
                    -database__connectionstring "$(database__connectionstring)"
                    -servicebus__publisherconnectionstring "$(servicebus__publisherconnectionstring)"
                    -servicebus__notifyqueue "$(servicebus__notifyqueue)"
                    -servicebussubscriberconnectionstring "$(servicebus__subscriberconnectionstring)"
                    -servicebusextractjobqueue "$(servicebusextractjobqueue)"
                    -functionapikey "$(functionapikey)"


              - task: AzureAppServiceManage@0
                displayName: Start Staging Slot
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Start Azure App Service'
                  WebAppName: 'func-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-searchservice'
                  ResourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'              
                  SpecifySlotOrASE: true
                  Slot: 'staging'

              - checkout: inss-devops-common-lib

              - task: PowerShell@2
                displayName: 'Performing Health Check - Staging'
                inputs:
                  failOnStderr: true
                  targetType: 'filePath'
                  filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                  arguments: > # Use this to avoid newline characters in multi-line string
                    -URI "https://func-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-searchservice-staging.azurewebsites.net/"
                    -Method "${{ parameters.method }}"
                    -Retries ${{ parameters.retries }}
                    -SecondsDelay ${{ parameters.secondsDelay }}
                    -TimeoutSec ${{ parameters.timeoutSec }}

              - task: AzureAppServiceManage@0
                displayName: Swap Staging Slot into Production
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Swap Slots'
                  WebAppName: 'func-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-searchservice'
                  ResourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'
                  SourceSlot: 'staging'
                  SwapWithProduction: true

              - task: PowerShell@2
                displayName: 'Performing Health Check - Production'
                inputs:
                  failOnStderr: true
                  targetType: 'filePath'
                  filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                  arguments: > # Use this to avoid newline characters in multi-line string
                    -URI "https://func-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-searchservice.azurewebsites.net/"
                    -Method "${{ parameters.method }}"
                    -Retries ${{ parameters.retries }}
                    -SecondsDelay ${{ parameters.secondsDelay }}
                    -TimeoutSec ${{ parameters.timeoutSec }}

              - task: AzureAppServiceManage@0
                displayName: Stop Staging Slot
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Stop Azure App Service'
                  WebAppName: 'func-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-searchservice'
                  ResourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'              
                  SpecifySlotOrASE: true
                  Slot: 'staging'

  - deployment:
    displayName: Deploy webapp
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:

            - ${{ if eq(parameters.deployWebapp, true) }}:

              - task: AzureRmWebAppDeployment@4
                displayName: Azure Web App Deploy
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appType: 'webApp'
                  WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-web'
                  deployToSlotOrASE: true
                  resourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'
                  slotName: 'staging'
                  package: '$(Pipeline.Workspace)/**/${{ parameters.appZipFile }}'
                  appSettings: >
                    -ConnectionStrings__iirwebdbContextConnectionString "$(iirwebdbContextConnectionString)"
                    -ApiSettings__ApiKey "$(functionapikey)"
                    -ApiSettings__BaseUrl "$(functionBaseUrl)"


              - task: AzureAppServiceManage@0
                displayName: Start Staging Slot
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Start Azure App Service'
                  WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-web'
                  ResourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'              
                  SpecifySlotOrASE: true
                  Slot: 'staging'

              - checkout: inss-devops-common-lib

              - task: PowerShell@2
                displayName: 'Performing Health Check - Staging'    
                inputs:
                  failOnStderr: true
                  targetType: 'filePath'
                  filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                  arguments: > # Use this to avoid newline characters in multi-line string
                    -URI "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-web-staging.azurewebsites.net/"
                    -Method "${{ parameters.method }}"
                    -Retries ${{ parameters.retries }}
                    -SecondsDelay ${{ parameters.secondsDelay }}
                    -TimeoutSec ${{ parameters.timeoutSec }} 
                
              - task: AzureAppServiceManage@0
                displayName: Swap Staging Slot into Production
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Swap Slots'
                  WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-web'
                  ResourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'
                  SourceSlot: 'staging'
                  SwapWithProduction: true

              - task: PowerShell@2
                displayName: 'Performing Health Check - Production'    
                inputs:
                  failOnStderr: true
                  targetType: 'filePath'
                  filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                  arguments: > # Use this to avoid newline characters in multi-line string
                    -URI "https://app-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-web.azurewebsites.net/"
                    -Method "${{ parameters.method }}"
                    -Retries ${{ parameters.retries }}
                    -SecondsDelay ${{ parameters.secondsDelay }}
                    -TimeoutSec ${{ parameters.timeoutSec }} 

              - task: AzureAppServiceManage@0
                displayName: Stop Staging Slot
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Stop Azure App Service'
                  WebAppName: 'app-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir-web'
                  ResourceGroupName: 'rg-${{ parameters.location }}-${{ lower(parameters.environment) }}-eiir'              
                  SpecifySlotOrASE: true
                  Slot: 'staging'

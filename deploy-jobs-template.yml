parameters:
  - name: environment
    type: string
    default: Dev
  - name: location
    type: string
    default: 'uksouth'
  - name: azureSubscription
    type: string
    default: 'AppServicesDevOps-NonProd'
  - name: method
    type: string
    default: 'GET'
  - name: retries
    type: number
    default: 5
  - name: secondsDelay
    type: number
    default: 20
  - name: timeoutSec
    type: number
    default: 120
  - name: Searchindexer
    type: string
    default: 'INSS.EIIR.Functions.zip'
  - name: DailyExtract
    type: string
    default: 'INSS.EIIR.DailyExtract.zip'
  - name: appZipFile
    type: string
    default: 'INSS.EIIR.WEB.zip'
  - name: deployWebapp
    type: string
  - name: deployfuncapp
    type: string
  - name: deployDailyExtract
    type: string

jobs:
  - deployment:
    displayName: Deploy EiiR Function App
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ if eq(parameters.deployfuncapp, true) }}:
              - task: AzureFunctionApp@1
                displayName: Deploy EiiR Function App
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appType: 'functionApp'
                  appName: 'func-eiir-${{ lower(parameters.environment) }}'
                  deployToSlotOrASE: true
                  resourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'
                  slotName: 'staging'
                  package: '$(Pipeline.Workspace)/**/${{ parameters.Searchindexer }}'

              - task: AzureAppServiceSettings@1
                displayName: Apply App Service Settings
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appName: 'func-eiir-${{ lower(parameters.environment) }}'
                  slotName: 'staging'
                  appSettings: |
                    [
                      {
                        "name": "functionapikey",
                        "value": "$(functionapikey)",
                        "slotSetting": false
                      },
                      {
                        "name": "notify__connectionstring",
                        "value": "$(notify__connectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "notify__subscriberEmailTemplateId",
                        "value": "$(notify__subscriberEmailTemplateId)",
                        "slotSetting": false
                      },
                      {
                        "name": "EIIRIndexUrl",
                        "value": "$(EIIRIndexUrl)",
                        "slotSetting": false
                      },
                      {
                        "name": "EIIRApiKey",
                        "value": "$(EIIRApiKey)",
                        "slotSetting": false
                      },
                      {
                        "name": "database__connectionstring",
                        "value": "$(database__connectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "database__databuffersize",
                        "value": "$(database__databuffersize)",
                        "slotSetting": false
                      },
                      {
                        "name": "database__updateextractavailableprocedure",
                        "value": "$(database__updateextractavailableprocedure)",
                        "slotSetting": false
                      },
                      {
                        "name": "database__getextractavailableprocedure",
                        "value": "$(database__getextractavailableprocedure)",
                        "slotSetting": false
                      },
                      {
                        "name": "database__getxmldataprocedure",
                        "value": "$(database__getxmldataprocedure)",
                        "slotSetting": false
                      },
                      {
                        "name": "database__commandtimeout",
                        "value": "$(database__commandtimeout)",
                        "slotSetting": false
                      },
                    {
                        "name": "servicebus__publisherconnectionstring",
                        "value": "$(servicebus__publisherconnectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "servicebussubscriberconnectionstring",
                        "value": "$(servicebus__subscriberconnectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "servicebus__notifyqueue",
                        "value": "$(servicebus__notifyqueue)",
                        "slotSetting": false
                      },
                      {
                        "name": "servicebusextractjobqueue",
                        "value": "$(servicebusextractjobqueue)",
                        "slotSetting": false
                      },
                      {
                        "name": "storageconnectionstring",
                        "value": "$(storageconnectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "blobcontainername",
                        "value": "$(blobcontainername)",
                        "slotSetting": false
                      },
                      {
                        "name": "extractjobserviceurl",
                        "value": "$(extractjobserviceurl)",
                        "slotSetting": false
                      },
                      {
                        "name": "extractjobtimercron",
                        "value": "$(extractjobtimercron)",
                        "slotSetting": false
                      }
                    ]

              - task: AzureAppServiceManage@0
                displayName: Start Staging Slot
                inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    Action: 'Start Azure App Service'
                    WebAppName: 'func-eiir-${{ lower(parameters.environment) }}'
                    ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'              
                    SpecifySlotOrASE: true
                    Slot: 'staging'

              - checkout: inss-devops-common-lib

              - task: PowerShell@2
                displayName: 'Performing Health Check - Staging'
                inputs:
                    failOnStderr: true
                    targetType: 'filePath'
                    filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                    arguments: > # Use this to avoid newline characters in multi-line string
                      -URI "https://func-eiir-${{ lower(parameters.environment) }}-staging.azurewebsites.net/"
                      -Method "${{ parameters.method }}"
                      -Retries ${{ parameters.retries }}
                      -SecondsDelay ${{ parameters.secondsDelay }}
                      -TimeoutSec ${{ parameters.timeoutSec }}

              - task: AzureAppServiceManage@0
                displayName: Swap Staging Slot into Production
                inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    Action: 'Swap Slots'
                    WebAppName: 'func-eiir-${{ lower(parameters.environment) }}'
                    ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'
                    SourceSlot: 'staging'
                    SwapWithProduction: true

              - task: PowerShell@2
                displayName: 'Performing Health Check - Production'
                inputs:
                    failOnStderr: true
                    targetType: 'filePath'
                    filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                    arguments: > # Use this to avoid newline characters in multi-line string
                      -URI "https://func-eiir-${{ lower(parameters.environment) }}.azurewebsites.net/"
                      -Method "${{ parameters.method }}"
                      -Retries ${{ parameters.retries }}
                      -SecondsDelay ${{ parameters.secondsDelay }}
                      -TimeoutSec ${{ parameters.timeoutSec }}

              - task: AzureAppServiceManage@0
                displayName: Stop Staging Slot
                inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    Action: 'Stop Azure App Service'
                    WebAppName: 'func-eiir-${{ lower(parameters.environment) }}'
                    ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'              
                    SpecifySlotOrASE: true
                    Slot: 'staging'

  - deployment:
    displayName: Deploy Eiir Daily Extract
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:
            - ${{ if eq(parameters.deployDailyExtract, true) }}:
              - task: AzureFunctionApp@2
                displayName: Deploy EiiR Daily Extract Function
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appType: 'functionApp'
                  appName: 'func-eiir-daily-extract-${{ lower(parameters.environment) }}'
                  deployToSlotOrASE: true
                  resourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'
                  slotName: 'staging'
                  package: '$(Pipeline.Workspace)/**/${{ parameters.DailyExtract }}'

              - task: AzureAppServiceSettings@1
                displayName: Apply App Service Settings
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appName: 'func-eiir-daily-extract-${{ lower(parameters.environment) }}'
                  slotName: 'staging'
                  appSettings: |
                    [  
                      {
                        "name": "functionURL",
                        "value": "$(functionBaseUrl)",
                        "slotSetting": false
                      },
                      {
                        "name": "functionAPIKey",
                        "value": "$(functionapikey)",
                        "slotSetting": false
                      },                 
                      {
                        "name": "snapshotTimercron",
                        "value": "$(snapshotTimercron)",
                        "slotSetting": false
                      },
                      {
                        "name": "TargetBlobConnectionString",
                        "value": "$(targetstorageconnectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "SourceBlobConnectionString",
                        "value": "$(storageconnectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "BlobContainer",
                        "value": "eiir/{name}",
                        "slotSetting": false
                      },
                      {
                        "name": "SourceContainer",
                        "value": "eiir",
                        "slotSetting": false
                      },
                      {
                        "name": "TargetContainer",
                        "value": "eiir-archive",
                        "slotSetting": false
                      },
                      {
                        "name": "DeleteSourceAfterCopy",
                        "value": "1",
                        "slotSetting": false
                      },
                      {
                        "name": "SqlConnectionString",
                        "value": "$(database__connectionstring)",
                        "slotSetting": false
                      },
                      {
                        "name": "FUNCTIONS_WORKER_RUNTIME",
                        "value": "dotnet",
                        "slotSetting": false
                      }
                    ]

              - task: AzureAppServiceManage@0
                displayName: Start Staging Slot
                inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    Action: 'Start Azure App Service'
                    WebAppName: 'func-eiir-daily-extract-${{ lower(parameters.environment) }}'
                    ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'              
                    SpecifySlotOrASE: true
                    Slot: 'staging'

              - checkout: inss-devops-common-lib

              - task: PowerShell@2
                displayName: 'Performing Health Check - Staging'
                inputs:
                    failOnStderr: true
                    targetType: 'filePath'
                    filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                    arguments: > # Use this to avoid newline characters in multi-line string
                      -URI "https://func-eiir-${{ lower(parameters.environment) }}-staging.azurewebsites.net/"
                      -Method "${{ parameters.method }}"
                      -Retries ${{ parameters.retries }}
                      -SecondsDelay ${{ parameters.secondsDelay }}
                      -TimeoutSec ${{ parameters.timeoutSec }}

              - task: AzureAppServiceManage@0
                displayName: Swap Staging Slot into Production
                inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    Action: 'Swap Slots'
                    WebAppName: 'func-eiir-daily-extract-${{ lower(parameters.environment) }}'
                    ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'
                    SourceSlot: 'staging'
                    SwapWithProduction: true

              - task: PowerShell@2
                displayName: 'Performing Health Check - Production'
                inputs:
                    failOnStderr: true
                    targetType: 'filePath'
                    filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                    arguments: > # Use this to avoid newline characters in multi-line string
                      -URI "https://func-eiir-${{ lower(parameters.environment) }}.azurewebsites.net/"
                      -Method "${{ parameters.method }}"
                      -Retries ${{ parameters.retries }}
                      -SecondsDelay ${{ parameters.secondsDelay }}
                      -TimeoutSec ${{ parameters.timeoutSec }}

              - task: AzureAppServiceManage@0
                displayName: Stop Staging Slot
                inputs:
                    azureSubscription: ${{ parameters.azureSubscription }}
                    Action: 'Stop Azure App Service'
                    WebAppName: 'func-eiir-daily-extract-${{ lower(parameters.environment) }}'
                    ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'              
                    SpecifySlotOrASE: true
                    Slot: 'staging'

  - deployment:
    displayName: Deploy Eiir Web App
    environment: ${{ parameters.environment }}
    strategy:
      runOnce:
        deploy:
          steps:

            - ${{ if eq(parameters.deployWebapp, true) }}:

              - task: AzureRmWebAppDeployment@4
                displayName: EiiR Web App Deploy
                inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: ${{ parameters.azureSubscription }}
                  appType: 'webApp'
                  WebAppName: 'app-eiir-web-${{ lower(parameters.environment) }}'
                  deployToSlotOrASE: true
                  resourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'
                  slotName: 'staging'
                  package: '$(Pipeline.Workspace)/**/${{ parameters.appZipFile }}'
                  appSettings: >
                    -ConnectionStrings__iirwebdbContextConnectionString "$(iirwebdbContextConnectionString)"
                    -ApiSettings__ApiKey "$(functionapikey)"
                    -ApiSettings__BaseUrl "$(functionBaseUrl)"


              - task: AzureAppServiceManage@0
                displayName: Start Staging Slot
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Start Azure App Service'
                  WebAppName: 'app-eiir-web-${{ lower(parameters.environment) }}'
                  ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'              
                  SpecifySlotOrASE: true
                  Slot: 'staging'

              - checkout: inss-devops-common-lib

              - task: PowerShell@2
                displayName: 'Performing Health Check - Staging'    
                inputs:
                  failOnStderr: true
                  targetType: 'filePath'
                  filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                  arguments: > # Use this to avoid newline characters in multi-line string
                    -URI "https://app-eiir-web-${{ lower(parameters.environment) }}-staging.azurewebsites.net/"
                    -Method "${{ parameters.method }}"
                    -Retries ${{ parameters.retries }}
                    -SecondsDelay ${{ parameters.secondsDelay }}
                    -TimeoutSec ${{ parameters.timeoutSec }} 
                
              - task: AzureAppServiceManage@0
                displayName: Swap Staging Slot into Production
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Swap Slots'
                  WebAppName: 'app-eiir-web-${{ lower(parameters.environment) }}'
                  ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'
                  SourceSlot: 'staging'
                  SwapWithProduction: true

              - task: PowerShell@2
                displayName: 'Performing Health Check - Production'    
                inputs:
                  failOnStderr: true
                  targetType: 'filePath'
                  filePath: $(System.DefaultWorkingDirectory)\powershell\InvokeRequestWithRetry.ps1
                  arguments: > # Use this to avoid newline characters in multi-line string
                    -URI "https://app-eiir-web-${{ lower(parameters.environment) }}.azurewebsites.net/"
                    -Method "${{ parameters.method }}"
                    -Retries ${{ parameters.retries }}
                    -SecondsDelay ${{ parameters.secondsDelay }}
                    -TimeoutSec ${{ parameters.timeoutSec }} 

              - task: AzureAppServiceManage@0
                displayName: Stop Staging Slot
                inputs:
                  azureSubscription: ${{ parameters.azureSubscription }}
                  Action: 'Stop Azure App Service'
                  WebAppName: 'app-eiir-web-${{ lower(parameters.environment) }}'
                  ResourceGroupName: 'rg-eiir-${{ lower(parameters.environment) }}'              
                  SpecifySlotOrASE: true
                  Slot: 'staging'
